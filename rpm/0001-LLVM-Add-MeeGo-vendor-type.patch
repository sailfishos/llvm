From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ruben De Smet <ruben.de.smet@rubdos.be>
Date: Sun, 26 Jun 2022 10:48:13 +0200
Subject: [PATCH] LLVM: Add MeeGo vendor type

Co-authored-by: Matti Viljanen <matti.viljanen@kapsi.fi>
---
 llvm/include/llvm/TargetParser/Triple.h    |  3 ++-
 llvm/lib/TargetParser/Triple.cpp           | 12 ++++++++++++
 llvm/unittests/TargetParser/TripleTest.cpp |  6 ++++++
 3 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/llvm/include/llvm/TargetParser/Triple.h b/llvm/include/llvm/TargetParser/Triple.h
index 59513fa2f2062af90fee7c7c42149674faa05299..5bddc2a52c05172ce444c607b42d037fbc835267 100644
--- a/llvm/include/llvm/TargetParser/Triple.h
+++ b/llvm/include/llvm/TargetParser/Triple.h
@@ -180,7 +180,8 @@ public:
     Mesa,
     SUSE,
     OpenEmbedded,
-    LastVendorType = OpenEmbedded
+    MeeGo,
+    LastVendorType = MeeGo
   };
   enum OSType {
     UnknownOS,
diff --git a/llvm/lib/TargetParser/Triple.cpp b/llvm/lib/TargetParser/Triple.cpp
index a68035989a93ea1f8f81bb5acc07e5c78db19eb5..ef48f02504ace6543e77e5e88622d262168e0e79 100644
--- a/llvm/lib/TargetParser/Triple.cpp
+++ b/llvm/lib/TargetParser/Triple.cpp
@@ -188,6 +188,7 @@ StringRef Triple::getVendorTypeName(VendorType Kind) {
   case Freescale: return "fsl";
   case IBM: return "ibm";
   case ImaginationTechnologies: return "img";
+  case MeeGo: return "meego";
   case Mesa: return "mesa";
   case MipsTechnologies: return "mti";
   case Myriad: return "myriad";
@@ -552,6 +553,7 @@ static Triple::VendorType parseVendor(StringRef VendorName) {
     .Case("mesa", Triple::Mesa)
     .Case("suse", Triple::SUSE)
     .Case("oe", Triple::OpenEmbedded)
+    .Case("meego", Triple::MeeGo)
     .Default(Triple::UnknownVendor);
 }
 
@@ -902,6 +904,9 @@ Triple::Triple(const Twine &Str)
         OS = parseOS(Components[2]);
         if (Components.size() > 3) {
           Environment = parseEnvironment(Components[3]);
+          // MeeGo uses "gnueabi" to mean "gnueabihf"
+          if (Vendor == Triple::MeeGo && Environment == Triple::GNUEABI)
+            Environment = Triple::GNUEABIHF;
           ObjectFormat = parseFormat(Components[3]);
         }
       }
@@ -953,6 +958,10 @@ Triple::Triple(const Twine &ArchStr, const Twine &VendorStr, const Twine &OSStr,
       ObjectFormat(parseFormat(EnvironmentStr.str())) {
   if (ObjectFormat == Triple::UnknownObjectFormat)
     ObjectFormat = getDefaultFormat(*this);
+
+  // MeeGo uses "gnueabi" to mean "gnueabihf"
+  if (Vendor == Triple::MeeGo && Environment == Triple::GNUEABI)
+    Environment = Triple::GNUEABIHF;
 }
 
 std::string Triple::normalize(StringRef Str) {
@@ -1207,6 +1216,9 @@ static VersionTuple parseVersionFromName(StringRef Name) {
 VersionTuple Triple::getEnvironmentVersion() const {
   StringRef EnvironmentName = getEnvironmentName();
   StringRef EnvironmentTypeName = getEnvironmentTypeName(getEnvironment());
+  // MeeGo uses "gnueabi" to mean "gnueabihf"
+  if (Vendor == Triple::MeeGo && getEnvironment() == Triple::GNUEABIHF)
+    EnvironmentTypeName = "gnueabi";
   if (EnvironmentName.startswith(EnvironmentTypeName))
     EnvironmentName = EnvironmentName.substr(EnvironmentTypeName.size());
 
diff --git a/llvm/unittests/TargetParser/TripleTest.cpp b/llvm/unittests/TargetParser/TripleTest.cpp
index 77de43a16d0a24026988c8a5c675c5d8d9bbd816..c25e33d2f235f35316a6a55238981779fd158bd4 100644
--- a/llvm/unittests/TargetParser/TripleTest.cpp
+++ b/llvm/unittests/TargetParser/TripleTest.cpp
@@ -535,6 +535,12 @@ TEST(TripleTest, ParsedIDs) {
   EXPECT_EQ(Triple::Linux, T.getOS());
   EXPECT_EQ(Triple::GNUEABI, T.getEnvironment());
 
+  T = Triple("armv7hl-meego-linux-gnueabi");
+  EXPECT_EQ(Triple::arm, T.getArch());
+  EXPECT_EQ(Triple::MeeGo, T.getVendor());
+  EXPECT_EQ(Triple::Linux, T.getOS());
+  EXPECT_EQ(Triple::GNUEABIHF, T.getEnvironment());
+
   T = Triple("i586-pc-haiku");
   EXPECT_EQ(Triple::x86, T.getArch());
   EXPECT_EQ(Triple::PC, T.getVendor());
